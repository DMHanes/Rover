
module signal(clk, s1,s2,s3,IR);
input clk,s1,s2,s3,IR;

reg [3:0] state=4'b0000;
always@(posedge clk)

case (state)
    4'b0000: begin  //S0 only job is to transfer to correct next state
        if (s1 > s2) begin
            state <= 4'b0001;
            //output
        end
        else if (s1==s2)begin
            state <= 4'b0011;
        end
        else if (s2>s1) begin
            state <= 4'b0010;
        end
        end


    4'b0001: begin   //Go towards sensor 1 if signal is stronger
        if (s1>s2)begin
            state <= 4'b0001;
        end
        else if (s1==s2)begin   //when equal STOP
            state <= 4'b0011;
        end
        //else if (s2>s1)begin
         //   state <= 3'b010;
    end

    4'b0010: begin   //go towards sensor 2 if signal is stronger
        if (s2>s1)begin
            state <= 4'b0010;
        end
        else if (s2==s1)begin   //go to stop state when equal
            state <= 4'b0011;
        end
    end

    4'b0011: begin   //STOP
        state <= 4'b0100;
    end
    
    4'b0100: begin //TURN
        if (s1!=s3 || s2 != s3)begin//LABEL SENSORS
            state <= 4'b0100;
        end

        else begin //LABEL SENSORS
            state <= 4'b0101;
        end
    end

    4'b0101: begin //move forward
        if(IR==0)begin 
            state <= 4'b0101;
        end
        if (IR==1)begin
            state <= 4'b0110;
        end
    end

    4'b0110: begin //STOP
        state <=4'b1000;
    end

    4'b0111: begin //SECOND TURN
        
        if (s1!=s3 || s2 != s3)begin//LABEL SENSORS
            state <= 4'b0111;
        end

        else begin //LABEL SENSORS
            state <= 4'b1000;
        end

    end

    4'b1000: begin //STOP
        
    end
endcase

endmodule



module TB;
    reg s1=5,s2=0,s3=0,IR=0,clk=0;
    signal signal_TB(clk, s1,s2,s3,IR);
    always begin
        clk=~clk;
        #5;
    end

    initial begin
        $dumpvars(0,TB);
        $dumpfile("ball_finding_TB.vcd");

        #40;
        $finish;

    end



endmodule

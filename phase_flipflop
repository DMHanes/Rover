


module phase(clk, data, Q);
    input clk, data;
    output reg Q=0;


    always@(posedge clk)
    begin
        Q <= data;
    end

endmodule


module top(clk,Q,left,right);

input clk, left, right;
output Q;

wire out;
phase phase1(left,right,out);
phase phase2(clk,out,Q);

endmodule

module TB;
    reg clk=0, left=0, right=0;
    wire Q;


    top phase_TB(clk,Q,left,right);
    always begin
        #7;
        left = ~left;
        
    end  
    always begin
        #5;
        right = ~right;
        
    end
        always begin
        clk=~clk;
        #1;
    end

    initial begin
        $dumpvars(0,TB);
        $dumpfile("phase.vcd");

        #100;
        $finish;

    end

endmodule
